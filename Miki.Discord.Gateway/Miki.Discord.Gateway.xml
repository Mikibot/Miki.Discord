<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Miki.Discord.Gateway</name>
    </assembly>
    <members>
        <member name="T:Miki.Discord.Gateway.Connection.GatewayConnection">
            <summary>
            Basic managed connection with Discord's gateway.
            </summary>
        </member>
        <member name="E:Miki.Discord.Gateway.Connection.GatewayConnection.OnConnect">
            <summary>
            Event that gets called when the connection connects successfully.
            </summary>
        </member>
        <member name="E:Miki.Discord.Gateway.Connection.GatewayConnection.OnDisconnect">
            <summary>
            Event that gets called when the connection gets disconnected.
            </summary>
        </member>
        <member name="E:Miki.Discord.Gateway.Connection.GatewayConnection.OnError">
            <summary>
            Event that gets called when an unexpected error gets thrown.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.Connection.GatewayConnection.IsRunning">
            <summary>
            Shows whether the gateway is active at the moment.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.Connection.GatewayConnection.#ctor(Miki.Discord.Gateway.GatewayProperties)">
            <summary>
            Creates a new gateway connection
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:Miki.Discord.Gateway.Connection.GatewayConstants.DefaultVersion">
            <summary>
            Default Gateway version supported by Miki.Discord.
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.Connection.GatewayConstants.WebSocketReceiveSize">
            <summary>
            Default websocket receive payload size.
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.Connection.GatewayConstants.WebSocketSendSize">
            <summary>
            Default websocket send payload size.
            </summary>
        </member>
        <member name="T:Miki.Discord.Gateway.Connection.GatewayEncoding">
            <summary>
            Discord supported Gateway encoding formats
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.Connection.GatewayEncoding.Json">
            <summary>
            Plain-text Json
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.Connection.GatewayEncoding.ETF">
            <summary>
            Erlang binary format
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToEnumConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToEnumConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToShortConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToShortConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int16,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToUlongConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Converters.StringToUlongConverter.Write(System.Text.Json.Utf8JsonWriter,System.UInt64,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayCluster.PacketReceived">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayCluster.Events">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayCluster.Shards">
            <summary>
            Currently running shards in this cluster.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.#ctor(Miki.Discord.Gateway.GatewayProperties)">
            <summary>
            Spawn all shards in a single cluster
            </summary>
            <param name="properties">general gateway properties</param>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.#ctor(Miki.Discord.Gateway.GatewayProperties,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Used to spawn specific shards only
            </summary>
            <param name="properties">general gateway properties</param>
            <param name="shards">Which shards should this cluster spawn</param>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.SendAsync(System.Int32,Miki.Discord.Common.Gateway.GatewayOpcode,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.RestartAsync">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayCluster.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.ChannelCreate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.ChannelDelete">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.ChannelUpdate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildCreate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildDelete">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildUpdate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildEmojiUpdate">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildMemberCreate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildMemberDelete">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildMemberUpdate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildRoleCreate">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildRoleDelete">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.GuildRoleUpdate">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.MessageCreate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.MessageDelete">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.MessageUpdate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.MessageReactionCreate">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.MessageReactionDelete">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.PresenceUpdate">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.Ready">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.TypingStart">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayEventHandler.UserUpdate">
            <inheritdoc />
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayEventHandler.OnPacketReceived(Miki.Discord.Common.Gateway.GatewayMessage)">
            <summary>
            Handles the observer's object to handle seperate typed observers.
            </summary>
        </member>
        <member name="T:Miki.Discord.Gateway.GatewayIntents">
            <summary>
            Intents to subscribe to specific events on the Discord Gateway.
            <a href="https://discordapp.com/developers/docs/topics/gateway#gateway-intents">
            Read more here</a>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.Guilds">
            <summary>
            Enables guild events for dispatch
            <list type="bullet">
            <item>GUILD_CREATE</item>
            <item>GUILD_DELETE</item>
            <item>GUILD_ROLE_CREATE</item>
            <item>GUILD_ROLE_UPDATE</item>
            <item>GUILD_ROLE_DELETE</item>
            <item>CHANNEL_CREATE</item>
            <item>CHANNEL_UPDATE</item>
            <item>CHANNEL_DELETE</item>
            <item>CHANNEL_PINS_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildMembers">
            <summary>
            Enables member events for dispatch
            <list type="bullet">
            <item>GUILD_MEMBER_ADD</item>
            <item>GUILD_MEMBER_UPDATE</item>
            <item>GUILD_MEMBER_REMOVE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildBans">
            <summary>
            Enables guild ban events for dispatch
            <list type="bullet">
            <item>GUILD_BAN_ADD</item>
            <item>GUILD_BAN_REMOVE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildEmojis">
            <summary>
            Enables guild emoji events for dispatch
            <list type="bullet">
            <item>GUILD_EMOJIS_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildIntegrations">
            <summary>
            Enables guild integration events for dispatch
            <list type="bullet">
            <item>GUILD_INTEGRATIONS_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildWebhooks">
            <summary>
            Enables guild webhook events for dispatch
            <list type="bullet">
            <item>WEBHOOKS_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildInvites">
            <summary>
            Enables guild invite events for dispatch
            <list type="bullet">
            <item>INVITE_CREATE</item>
            <item>INVITE_DELETE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildVoiceStates">
            <summary>
            Enables guild voice events for dispatch
            <list type="bullet">
            <item>VOICE_STATE_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildPresences">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>PRESENCE_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildMessages">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>MESSAGE_CREATE</item>
            <item>MESSAGE_UPDATE</item>
            <item>MESSAGE_DELETE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildMessageReactions">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>MESSAGE_REACTION_ADD</item>
            <item>MESSAGE_REACTION_REMOVE</item>
            <item>MESSAGE_REACTION_REMOVE_ALL</item>
            <item>MESSAGE_REACTION_REMOVE_EMOJI</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.GuildMessageTyping">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>TYPING_START</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.DirectMessages">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>CHANNEL_CREATE</item>
            <item>MESSAGE_CREATE</item>
            <item>MESSAGE_UPDATE</item>
            <item>MESSAGE_DELETE</item>
            <item>CHANNEL_PINS_UPDATE</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.DirectMessageReactions">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>MESSAGE_REACTION_ADD</item>
            <item>MESSAGE_REACTION_REMOVE</item>
            <item>MESSAGE_REACTION_REMOVE_ALL</item>
            <item>MESSAGE_REACTION_REMOVE_EMOJI</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.DirectMessageTyping">
            <summary>
            Enables presence events for dispatch
            <list type="bullet">
            <item>TYPING_START</item>
            </list>
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.AllDefault">
            <summary>
            Default gateway intents if none is passed through.
            </summary>
        </member>
        <member name="F:Miki.Discord.Gateway.GatewayIntents.AllPrivileged">
            <summary>
            All intents, includes privileged routes such as <see cref="F:Miki.Discord.Gateway.GatewayIntents.GuildPresences"/> and
            <see cref="F:Miki.Discord.Gateway.GatewayIntents.GuildMembers"/>.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayShard.Events">
            <inheritdoc/>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayShard.ShardId">
            <summary>
            Index of the shard.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayShard.Status">
            <summary>
            Current status of the connection.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayShard.RestartAsync">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayShard.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayShard.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayShard.SendAsync(System.Int32,Miki.Discord.Common.Gateway.GatewayOpcode,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.GatewayShard.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Miki.Discord.Gateway.GatewayProperties">
            <summary>
            Configurable properties for the gateway client.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Token">
            <summary>
            Discord token
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Compressed">
            <summary>
            Whether the gateway should receive zlib-compressed packets.
            <code>Warning: this is not supported in this library as of now. Please check the github
            page.</code>
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Encoding">
            <summary>
            What kind of encoding do you want receive.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Version">
            <summary>
            If you are unsure what this should be, keep it null or GatewayConstants.DefaultVersion.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.ShardCount">
            <summary>
            Total shards running on this token
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.ShardId">
            <summary>
            The current shard's Id
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.GatewayFactory">
            <summary>
            The gateway factory used for spawning shards in <see cref="T:Miki.Discord.Gateway.GatewayCluster"/>.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.WebSocketFactory">
            <summary>
            The websocket that will be used to connect to discord.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Ratelimiter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.SerializerOptions">
            <summary>
            Json serializer options.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.AllowNonDispatchEvents">
            <summary>
            Allow events other than dispatch to be received in raw events?
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.UseGatewayEvents">
            <summary>
            Initializes <see cref="T:Miki.Discord.Common.IGatewayEvents"/> for rich events.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.GatewayProperties.Intents">
            <summary>
            <see cref="T:Miki.Discord.Gateway.GatewayIntents"/> to subscribe to events. If passed null, you'll subscribe to all events.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.Ratelimiting.CacheBasedRatelimiter.CanIdentifyAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Miki.Discord.Gateway.Ratelimiting.DefaultGatewayRatelimiter.CanIdentifyAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Miki.Discord.Gateway.Ratelimiting.IGatewayRatelimiter">
            <summary>
            Ratelimits identify calls on websocket.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.Ratelimiting.IGatewayRatelimiter.CanIdentifyAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns whether it can identify or not.
            </summary>
        </member>
        <member name="T:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient">
            <summary>
            Default WebSocket implementation with <see cref="T:System.Net.WebSockets.ClientWebSocket"/>.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.#ctor">
            <summary>
            Creates a new instance of the websocket.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.CloseStatus">
            <inheritdoc />
        </member>
        <member name="P:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.CloseStatusDescription">
            <inheritdoc />
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.DefaultWebSocketClient.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Miki.Discord.Gateway.WebSocket.IWebSocketClient">
            <summary>
            Abstraction for websockets.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.WebSocket.IWebSocketClient.CloseStatus">
            <summary>
            Current reason if websocket is closed.
            </summary>
        </member>
        <member name="P:Miki.Discord.Gateway.WebSocket.IWebSocketClient.CloseStatusDescription">
            <summary>
            Additional server-fed data sent with a close.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.IWebSocketClient.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>
            Closes the WebSocket connection.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.IWebSocketClient.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            Connects a WebSocket.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.IWebSocketClient.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Receive a buffer from the WebSocket stream.
            </summary>
        </member>
        <member name="M:Miki.Discord.Gateway.WebSocket.IWebSocketClient.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Send a message to the server.
            </summary>
        </member>
        <member name="T:Miki.Discord.Common.Gateway.GatewayEventType">
            <summary>
            All Gateway Events.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.ChannelCreate">
            <summary>
            A new channel was created.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.ChannelDelete">
            <summary>
            A channel was deleted.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.ChannelUpdate">
            <summary>
            A channel was edited.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.ChannelPinsUpdate">
            <summary>
            A message was pinned on this channel.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildBanAdd">
            <summary>
            A member got banned.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildBanRemove">
            <summary>
            A member got unbanned.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildCreate">
            <summary>
            The bot joined a new guild.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildDelete">
            <summary>
            The bot left a guild.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildEmojisUpdate">
            <summary>
            A new emoji got added/removed.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildIntegrationsUpdate">
            <summary>
            A new integration got added/removed.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildMemberAdd">
            <summary>
            A member joined a guild.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildMemberRemove">
            <summary>
            A former member left a guild.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildMemberUpdate">
            <summary>
            A guild member updated their profile/roles/nickname.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.GuildMembersChunk">
            <summary>
            Gateway requested members from this guild.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.Ready">
            <summary>
            Gateway is ready to go.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.Resumed">
            <summary>
            The connection was cut and got resumed.
            </summary>
        </member>
        <member name="F:Miki.Discord.Common.Gateway.GatewayEventType.Undefined">
            <summary>
            Catch-all for undefined event types.
            </summary>
        </member>
    </members>
</doc>
